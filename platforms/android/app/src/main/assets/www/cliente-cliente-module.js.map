{"version":3,"sources":["webpack:///./src/app/cliente/cliente.module.ts","webpack:///./src/app/cliente/cliente.page.html","webpack:///./src/app/cliente/cliente.page.scss","webpack:///./src/app/cliente/cliente.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,yDAAyD,WAAW,k4C;;;;;;;;;;;ACApE,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;ACAhB;AACG;AACD;AAC0B;AAClC;AAOzC;IAEE,qBAAmB,OAAqB,EAC5B,eAA+B,EAC/B,kBAAqC,EACpC,OAAgB;QAHV,YAAO,GAAP,OAAO,CAAc;QAC5B,oBAAe,GAAf,eAAe,CAAgB;QAC/B,uBAAkB,GAAlB,kBAAkB,CAAmB;QACpC,YAAO,GAAP,OAAO,CAAS;IAAE,CAAC;IAIjC,8BAAQ,GAAR;QAAA,iBAKC;QAJD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACjC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;YAClC,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;IACH,CAAC;IACF,sFAAsF;IAC9E,kCAAY,GAAlB;;;;;4BACc,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,QAAQ,EAAE,aAAa;4BACvB,MAAM,EAAE,SAAS;4BACjB,SAAS,EAAE,iBAAiB;4BAC5B,OAAO,EAAE,mDAAmD;4BAC5D,OAAO,EAAE,CAAC,IAAI,CAAC;yBAChB,CAAC;;wBANI,KAAK,GAAG,SAMZ;wBACF,sBAAO,KAAK,CAAC,OAAO,EAAE,EAAC;;;;KACvB;IACF,sFAAsF;IACtF,iCAAW,GAAX;QACE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YAChC,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,aAAa;YACpB,IAAI,EAAE,wCAAwC;SAC7C,CAAC,CAAC;IACL,CAAC;IAMD,gCAAU,GAAV,UAAW,OAAO,EAAE,KAAK,EAAE,SAAS;QACjC,IAAG,OAAO,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI,EAAC;YAC1D,IAAI,CAAC,YAAY,EAAE,CAAC;SACpB;aACG;YACH,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC;YACnD,IAAI,CAAC,WAAW,EAAE,CAAC;SACnB;IACF,CAAC;IA/CW,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+FAAkC;;SAEnC,CAAC;+EAG2B,4DAAa;YACZ,8DAAe;YACZ,wFAAkB;YAC3B,sDAAO;OALlB,WAAW,CAgDvB;IAAD,kBAAC;CAAA;AAhDuB","file":"cliente-cliente-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ClientePage } from './cliente.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ClientePage]\n})\nexport class ClientePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"{{pageColor}}\\\">\\n  \\t<ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Cliente</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<h3 class=\\\"ion-padding-start\\\">O que você deseja?</h3>\\n\\t<ion-item>\\n\\t\\t<ion-label>Qual serviço:</ion-label>\\n\\t\\t<ion-input [(ngModel)]=\\\"servico\\\" name=\\\"servico\\\" type=\\\"text\\\"></ion-input>\\n\\t</ion-item>\\n\\n\\t<ion-item>\\n\\t\\t<ion-label>Quanto deseja pagar:</ion-label>\\n\\t\\t<ion-input [(ngModel)]=\\\"valor\\\" name=\\\"valor\\\" type=\\\"number\\\"></ion-input>\\n\\t</ion-item>\\n\\n\\t<ion-item>\\n\\t\\t<ion-label>Forma de pagamento:</ion-label>\\n\\t\\t<ion-select [(ngModel)]=\\\"pagamento\\\" name=\\\"pagamento\\\" placeholder=\\\"Selecione\\\">\\n\\t\\t    <ion-select-option>Dinheiro</ion-select-option>\\n\\t\\t    <ion-select-option>Cartão de Credito</ion-select-option>\\n\\t\\t    <ion-select-option>Transferencia Bancaria</ion-select-option>\\n\\t    </ion-select>\\n\\t</ion-item>\\n\\n\\t<ion-item lines=\\\"none\\\">\\n\\t\\t<ion-label>Informações adicionais:</ion-label>\\n\\t</ion-item>\\n\\t<ion-item>\\n\\t\\t<ion-textarea rows=\\\"8\\\"></ion-textarea>\\n\\t</ion-item>\\n\\n\\t<div>\\n\\t\\t<ion-item lines=\\\"none\\\" padding-top>\\n\\t\\t\\t<ion-button (click)=\\\"goServicos(servico, valor, pagamento)\\\" type=\\\"submit\\\" size=\\\"default\\\" color=\\\"success\\\">Enviar</ion-button>\\n\\t\\t</ion-item>\\n\\t</div>\\n\\n\\t<ion-router-outlet main></ion-router-outlet>\\t\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudGUvY2xpZW50ZS5wYWdlLnNjc3MifQ== */\"","import { NavController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.page.html',\n  styleUrls: ['./cliente.page.scss'],\n})\nexport class ClientePage implements OnInit {\n\n  constructor(public navCtrl:NavController, \n  \t\t\t  public alertController:AlertController, \n  \t\t\t  public localNotifications:LocalNotifications,\n  \t\t\t  private storage: Storage){}\n\n\tpageColor:string;\n\n\tngOnInit() {\n\tthis.storage.get('color').then((val) => {\n\t  console.log('Your color is', val);\n\t  this.pageColor = val;\n\t});\n\t}\n//////////////////////////////////////////////////////////////////////////////////////\n  async presentAlert() {\n\t const alert = await this.alertController.create({\n\t   cssClass: 'alertDanger',\n\t   header: 'Atenção',\n\t   subHeader: 'Campo em branco',\n\t   message: 'Por favor, preencha todos os campos corretamente.',\n\t   buttons: ['OK']\n\t });\n\t return alert.present();\n\t}\n//////////////////////////////////////////////////////////////////////////////////////\nnotificacao() {\n\t\tthis.localNotifications.schedule({\n\t\t\tid: 1,\n\t\t\ttitle: 'Surpresa!!!',\n\t\t\ttext: 'Alguem está interessado em seu anuncio',\n\t\t });\n\t}\n/////////////////////////////////////////////////////////////////////////////////////\n  servico: string;\n  valor: number;\n  pagamento: any;\n\n\tgoServicos(servico, valor, pagamento){\n\t  \tif(servico == null || valor == null || pagamento == null){\n\t\t\tthis.presentAlert();\n\t\t}\n\t\telse{\n\t\t\tthis.navCtrl.navigateForward('/servicos-enviados');\n\t\t\tthis.notificacao();\n\t\t}\n\t}\n}\n"],"sourceRoot":""}